@mixin flex($direction, $justify, $align) {
  display: flex;
  flex-direction: $direction;
  justify-content: $justify;
  align-items: $align;
}
$width : 125px;
$height : 188px;

.card {
  margin: 50px 50px;
  padding: 10px;
  border: solid black;
  border-radius: 5%;
  width: $width;
  height: $height;
  background-color: white;
  @include flex(column, center, center);
  opacity: 0.5;

  .card_Donnees {
    border: solid black;
    width: $width;
    height: $height;
    border-radius: 5%;
    @include flex(column, space-between, center);
    background-color: white;

    .card_Donnees_top_left {
      align-self: flex-start;
      margin-right: 3px;
      margin-bottom: 3px;
      line-height: 0.7;
      font-size: 20px;
    }

    .card_Donnees_center {
      align-self: center;
      font-size: 50px;
    }

    .card_Donnees_bot_right {
      align-self: flex-end;
      transform: rotate(180deg);
      margin-right: 3px;
      margin-bottom: 3px;
      line-height: 0.7;
      font-size: 20px;
    }
  }
}

@mixin generate-cards($num-cards, $start-angle: -30deg, $end-angle: 30deg, $distance: 20px) {
  $angle-range: $end-angle - $start-angle;

  @for $i from 0 to $num-cards {
    #card#{$i} {
      position: absolute;
      z-index: $num-cards - $i + 1;
      left: 40%;
      bottom: -50%;
      transform: translateX(-50%) translateY(-50%) rotate($start-angle + $i * calc($angle-range / ($num-cards - 1)));
      margin-left: $i * $distance;
    }
  }
}

@mixin generate-defausse($num-cards-defausse) {
  @for $i from 1 through $num-cards-defausse {
    #defausse#{$i} {
      position: absolute;
      z-index: $num-cards-defausse - $i + 1;
      left: 30%;
      bottom: 30%;
      transform: rotate(random() * 360deg);
    }
  }
}


@include generate-cards(6);
@include generate-defausse(3)
